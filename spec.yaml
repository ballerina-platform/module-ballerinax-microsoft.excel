openapi: 3.0.3
info:
  title: Microsoft Graph REST API Excel Resource
  description: Ballerina Microsoft Excel client provides the capability to access Microsoft Graph Excel API to perform CRUD (Create, Read, Update, and Delete) operations on Excel workbooks stored in Microsoft OneDrive for Business, SharePoint site or Group drive.
  version: 1.0.0
servers:
  - url: https://graph.microsoft.com/v1.0/
security:
  - OAuth2:
      - client_id
      - client_secret
      - refresh_url
      - refresh_token
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: https://login.microsoftonline.com/organizations/oauth2/v2.0/token
          authorizationUrl: https://login.microsoftonline.com/organizations/oauth2/v2.0/token
          scopes:
            write: Files.ReadWrite
  schemas:
    Session:
      type: object
      description: Represents session info of workbook.
      properties:
        id:
          type: string
          description: The ID of the workbook session
        persistChanges:
          type: boolean
          description: Whether to create a persistent session or not. `true` for persistent session. `false` for non-persistent session (view mode)
      required:
        - persistChanges
    CreateWorksheet:
      type: object
      description: Represents worksheet name to create worksheet.
      properties:
        name:
          type: string
          description: Name of the new worksheet.
    Worksheet:
      type: object
      description: Represents the worksheet.
      properties:
        id:
          type: string
          description: The unique identifier of the worksheet
        name:
          type: string
          description: The name of the worksheet
        position:
          type: integer
          description: The position of the worksheet in the workbook
        visibility:
          type: string
          description: The Visibility of the worksheet. 
          enum:
            - Visible
            - Hidden
            - VeryHidden
    Worksheets:
      type: object
      description: Represents the list of worksheet.
      properties:
        value:
          type: array
          description: The list of worksheet
          items:
            $ref: '#/components/schemas/Worksheet'
    CalculationMode:
      type: object
      description: Represents the properties to recalculate all currently opened workbooks in Excel.
      properties:
        calculationMode:
          type: string
          description: Specifies the calculation type to use
          enum:
            - Recalculate
            - Full
            - FullRebuild
    Application:
      type: object
      description: Represents the Excel application that manages the workbook.
      properties:
        calculationMode:
          type: string
          description: Returns the calculation mode used in the workbook
          enum:
            - Automatic
            - AutomaticExceptTables
            - Manual
    Comment:
      type: object
      description: Represents the workbook comment.
      properties:
        content:
          type: string
          description: The content of the comment
        contentType:
          type: string
          description: Indicates the type for the comment
        id:
          type: string
          description: Represents the comment identifier. Read-only
    Comments:
      type: object
      description: Represents the list of workbook comment.
      properties:
        values:
          type: array
          description: The list of workbook comment
          items:
            $ref: '#/components/schemas/Comment'
    Reply:
      type: object
      description: Represents the reply of the workbook comments.
      properties:
        id:
          type: string
          description: The ID of the comment reply
        content:
          type: string
          description: The content of the comment reply
        contentType:
          type: string
          description: Indicates the type for the comment reply
    Replies:
      type: object
      description: Represents the list of replies of the workbook comment.
      properties:
        value:
          type: array
          description: The list of replies of the workbook comment
          items:
            $ref: '#/components/schemas/Reply'
    Row:
      type: object
      description: Represents the table row properties.
      properties:
        id:
          type: string
          description: The ID of the table row.
        index:
          type: integer
          description: The index of the table row.
        values:
          type: array
          description: The values in the table row.
          items:
            type: array
            items:
              oneOf:
                - type: string
                - type: integer
    Rows:
      type: object
      description: Represents the list of table row properties.
      properties:
        value:
          type: array
          description: The list of table row
          items:
            $ref: '#/components/schemas/Row'
    Across:
      type: object
      description: Represents the properties to the merge range.
      properties:
        across:
          type: boolean
          description: Set true to merge cells in each row of the specified range as separate merged cells.
          default: false
    ApplyTo:
      type: object
      description: Represents the properties to clear range values
      properties:
        applyTo:
          type: string
          description: Determines the type of clear action
          enum:
            - All
            - Formats
            - Contents
    CreateTablePayload:
      type: object
      description: Represents the properties to create table.
      properties:
        address:
          type: string
          description: Address or name of the range object representing the data source. If the address doesn't contain a sheet name, the currently active sheet is used.
        hasHeaders:
          type: boolean
          description: whether the data being imported has column labels. If the source doesn't contain headers (when this property set to false), Excel generates header shifting the data down by one row.
    Table:
      type: object
      description: Represents a table properties.
      properties:
        id:
          type: string
          description: A value that uniquely identifies the table in a given workbook
        name:
          type: string
          description: The name of the table.
        highlightFirstColumn:
          type: boolean
          description: Indicates whether the first column contains special formatting
        highlightLastColumn:
          type: boolean
          description: Indicates whether the last column contains special formatting
        legacyId:
          type: string
          description: Legacy ID used in older Excel clients
        showBandedRows:
          type: boolean
          description: Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier
        showBandedColumns:
          type: boolean
          description: Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier
        showFilterButton:
          type: boolean
          description: Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row
        showHeaders:
          type: boolean
          description: Indicates whether the header row is visible or not. This value can be set to show or remove the header row
        showTotals:
          type: boolean
          description: Indicates whether the total row is visible or not. This value can be set to show or remove the total row
        style:
          type: string
          description: Constant value that represents the Table style.
          enum:
            - TableStyleLight1
            - TableStyleLight21
            - TableStyleMedium1
            - TableStyleMedium2
            - TableStyleMedium28
            - TableStyleDark1
            - TableStyleDark11
    Tables:
      type: object
      description: Represents a list of table.
      properties:
        valuse:
          type: array
          description: List of table
          items:
            $ref: '#/components/schemas/Table'
    Range:
      type: object
      properties:
        address:
          type: string
          description: Represents the range reference in A1-style. Address value contains the Sheet reference (for example, Sheet1!A1:B4). Read-only
        addressLocal:
          type: string
          description: Represents range reference for the specified range in the language of the user. Read-only.
        cellCount:
          type: integer
          description: Number of cells in the range. Read-only.
        columnCount:
          type: integer
          description: Represents the total number of columns in the range. Read-only.
        columnHidden:
          type: boolean
          description: Represents if all columns of the current range are hidden
        columnIndex:
          type: integer
          description: Represents the column number of the first cell in the range. Zero-indexed. Read-only.
        formulas:
          type: array
          nullable: true
          description: Represents the formula in A1-style notation.
          items:
            type: array
            items:
              oneOf: 
                - type: string
                - type: integer
        formulasLocal:
          type: array
          nullable: true
          description: Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English "=SUM(A1, 1.5)" formula would become "=SUMME(A1; 1,5)" in German.
          items:
            type: array
            items:
              oneOf: 
                - type: string
                - type: integer
        formulasR1C1:
          type: array
          nullable: true
          description: Represents the formula in R1C1-style notation.
          items:
            type: array
            items:
              oneOf: 
                - type: string
                - type: integer
        hidden:
          type: boolean
          description: Represents if all cells of the current range are hidden. Read-only.
        numberFormat:
          type: array
          nullable: true
          description: Represents Excel's number format code for the given cell.
          items:
            type: array
            items:
              oneOf: 
                - type: string
                - type: integer
        rowCount:
          type: integer
          description: Returns the total number of rows in the range. Read-only.
        rowHidden:
          type: boolean
          description: Represents if all rows of the current range are hidden.
        rowIndex:
          type: integer
          description: Returns the row number of the first cell in the range. Zero-indexed. Read-only.
        text:
          type: array
          nullable: true
          description: Text values of the specified range. The Text value doesn't depend on the cell width. The sign substitution that happens in Excel UI doesn't affect the text value returned by the API. Read-only.
          items:
            type: array
            items:
              oneOf: 
                - type: string
                - type: integer
        valueTypes:
          type: array
          nullable: true
          description: Represents the type of data of each cell. The possible values are:- Unknown, Empty, String, Integer, Double, Boolean, Error. Read-only.
          items:
            type: array
            items:
              oneOf: 
                - type: string
                - type: integer
        values:
          type: array
          nullable: true
          description: Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contains an error returns the error string.
          items:
            type: array
            items:
              oneOf: 
                - type: string
                - type: integer
    RangeView:
      type: object
      description: Represents a range view.
      properties:
        cellAddresses:
          type: object
          description: Represents the cell addresses
        columnCount:
          type: integer
          description: Returns the number of visible columns. Read-only.
        formulas:
          type: object
          description: Represents the formula in A1-style notation.
        formulasLocal:
          type: object
          description: Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English "=SUM(A1, 1.5)" formula would become "=SUMME(A1; 1,5)" in German.
        formulasR1C1:
          type: object
          description: Represents the formula in R1C1-style notation.
        index:
          type: integer
          description: Index of the range
        numberFormat:
          type: object
          description: Represents Excel's number format code for the given cell.
        rowCount:
          type: integer
          description: Returns the total number of rows in the range. Read-only.
        text:
          type: object
          description: Text values of the specified range. The Text value doesn't depend on the cell width. The sign substitution that happens in Excel UI doesn't affect the text value returned by the API. Read-only.
        valueTypes:
          type: object
          description: Represents the type of data of each cell. The possible values are:- Unknown, Empty, String, Integer, Double, Boolean, Error. Read-only.
        values:
          type: object
          description: Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contains an error returns the error string.
    CreateChartPayload:
      type: object
      description: Represents the properties to create chart.
      properties:
        type:
          type: string
          description: Represents the type of a chart 
        sourceData:
          type: string
          description: The Range object corresponding to the source data
        seriesBy:
          type: string
          description: Specifies the way columns or rows are used as data series on the chart.
          enum:
            - Auto
            - Columns
            - Rows
    Chart:
      type: object
      description: Represents a chart properties.
      properties:
        height:
          type: number
          description: Represents the height, in points, of the chart object.
        id:
          type: string
          description: Gets a chart based on its position in the collection. Read-only.
        left:
          type: number
          description: The distance, in points, from the left side of the chart to the worksheet origin.
        name:
          type: string
          description: Represents the name of a chart object.
        top:
          type: number
          description: Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).
        width:
          type: number
          description: Represents the width, in points, of the chart object.
    Charts:
      type: object
      description: Represents a list of chart.
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/Chart'
          description: Represents the list of the chart
    Image:
      type: object
      description: Represents an image.
      properties:
        value:
          type: string
          description: The image in base64-encoded
    AddNamedItemPayload:
      type: object
      description: Represents the properties to create a named item.
      oneOf:
        - $ref: '#/components/schemas/Item'
        - $ref: '#/components/schemas/FormulaLocal'
    Item:
      type: object
      description: Represents the properties to add new name to the collection of the given scope.
      properties:
        name:
          type: string
          description: The name of the new named item.
        type:
          type: string
          description: The type of the new named item.
          enum:
            - Range
            - Formula
            - Text
            - Integer
            - Double
            - Boolean
        reference:
          type: string
          description: The reference to the object that the new named item refers to.
        comment:
          type: string
          description: The comment associated with the named item
    FormulaLocal:
      type: object
      description: Represents the properties to add a new name to the collection of the given scope using the user's locale for the formula..
      properties:
        name:
          type: string
          description: The name of the new named item.
        formulas:
          type: string
          description: The formula or the range that the name will refer to.
        comment:
          type: string
          description: The formula or the range that the name will refer to.
    NamedItem:
      type: object
      description: Represents the properties of the named item.
      properties:
        name:
          type: string
          description: The name of the new named item.
        type:
          type: string
          description: The type of the new named item.
          enum:
            - String
            - Integer
            - Double
            - Range
            - Boolean
        comment:
          type: string
          description: The comment associated with this name
        scopes:
          type: string
          description: Indicates whether the name is scoped to the workbook or to a specific worksheet.
        value:
          oneOf:
            - type: object
            - type: string 
            - type: array
              items:
                 type: object 
          description: Represents the formula that the name is defined to refer to
        visible:
          type: boolean
          description: Specifies whether the object is visible or not
    NamedItems:
      type: object
      description: Represents the properties of the named item.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NamedItem'
          description: Represents the list of the named item
    ResetData:
      type: object
      description: Represents the properties to reset the data of the chart.
      properties:
        sourceData:
          type: object
          description: The range corresponding to the source data.
        seriesBy:
          type: string
          description: Specifies the way columns or rows are used as data series on the chart.
          enum:
            - Auto
            - Columns
            - Rows
    Position:
      type: object
      description: Represents the properties of the position.
      properties:
        startCell:
          type: object
          description: The start cell. This is where the chart is moved to. The start cell is the top-left or top-right cell, depending on the user's right-to-left display settings.
        endCell:
          type: string
          description: The end cell. If specified, the chart's width and height will be set to fully cover up this cell/range.
      required:
        - startCell
    ChartSeries:
      type: object
      description: Represents the chart series.
      properties:
        name:
          type: string
          description: The name of a series in a chart
    collectionOfChartSeries:
      type: object
      description: Represents the collection of the chart series.
      properties:
        value:
          type: array
          description: The collection of the chart series
          items:
            $ref: '#/components/schemas/ChartSeries'
    Shift:
      type: object
      description: Represents the ways to shift the cells.
      properties:
        shift:
          type: string
          description: Specifies which way to shift the cells
          enum:
            - Down
            - Right
            - Up
            - Left
    AnotherRange:
      type: object
      description: Represents the range.
      properties:
        anotherRange:
          type: string
          description: The range or address or range name
    OffsetRange:
      type: object
      description: Represents the offset range.
      properties:
        rowOffset:
          type: integer
          description: The number of rows (positive, negative, or 0) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward.
        columnOffset:
          type: integer
          description: The number of columns (positive, negative, or 0) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left.
    RangeFormat:
      type: object
      description: Represents the range format.
      properties:
        columnWidth:
          type: number
          description: Gets or sets the width of all columns within the range. If the column widths aren't uniform, null will be returned.
        horizontalAlignment:
          type: string
          description: Represents the horizontal alignment for the specified object
          enum:
            - General
            - Left
            - Center
            - Right
            - Fill
            - Justify
            - CenterAcrossSelection
            - Distributed
        rowHeight:
          type: number
          description: Gets or sets the height of all rows in the range. If the row heights aren't uniform null will be returned.
        verticalAlignment:
          type: string
          description: Represents the horizontal alignment for the specified object
          enum:
            - Top
            - Center
            - Bottom
            - Justify
            - Distributed
        wrapText:
          type: boolean
          description: Indicates if Excel wraps the text in the object. A null value indicates that the entire range doesn't have uniform wrap setting.
    Column:
      type: object
      description: Represents the table column.
      properties:
        id:
          type: string
          description: A unique key that identifies the column within the table
        index:
          type: integer
          description: The index number of the column within the columns collection of the table.
        name:
          type: string
          description: The name of the table column.
        values:
          type: array
          description: The raw values of the specified range
          items:
            type: array
            items:
              oneOf:
                - type: string
                - type: integer
    Columns:
      type: object
      description: Represents the list of table column.
      properties:
        value:
          type: array
          description: The list of table column
          items:
            $ref: '#/components/schemas/Column'
    PivotTable:
      type: object
      description: Represents the pivot table.
      properties:
        id:
          type: string
          description: ID of the PivotTable. Read-only.
        name:
          type: string
          description: Name of the PivotTable
    PivotTables:
      type: object
      description: Represents the list of pivot table.
      properties:
        value:
          type: array
          description: The list of pivot table
          items:
            $ref: '#/components/schemas/PivotTable'
  parameters:
    itemId:
      name: itemId
      description: The ID of the drive containing the workbook
      in: path
      required: true
      schema:
        type: string
    sessionId:
      name: sessionId
      description: The ID of the session
      in: header
      required: false
      schema:
        type: string
    workbookSessionId:
      name: sessionId
      description: The ID of the session
      in: header
      required: true
      schema:
        type: string
    itemPath:
      name: itemPath
      description: The full path of the workbook
      in: path
      required: true
      schema:
        type: string
    worksheetIdOrName:
      name: worksheetIdOrName
      description: The ID or name of the worksheet
      in: path
      required: true
      schema:
        type: string
    chartIdOrName:
      name: chartIdOrName
      description: The ID or name of the chart
      in: path
      required: true
      schema:
        type: string
    replyId:
      name: replyId
      description: The ID of the reply
      in: path
      required: true
      schema:
        type: string
    tableIdOrName:
      name: tableIdOrName
      description: The ID or name of the table
      in: path
      required: true
      schema:
        type: string
    rowIndex:
      name: rowIndex
      description: The index of the table row
      in: path
      required: true
      schema:
        type: integer
    address:
      name: address
      description: The address
      in: path
      required: true
      schema:
        type: string
    index:
      name: index
      description: Index value of the object to be retrieved. Zero-indexed.
      in: path
      required: true
      schema:
        type: integer
    namedItemName:
      name: namedItemName
      description: The name of the named item
      in: path
      required: true
      schema:
        type: string
    columnIdOrName:
      name: columnIdOrName
      description: The ID or name of the column
      in: path
      required: true
      schema:
        type: string
    columnCount:
      name: columnCount
      description: The number of columns to include in the resulting range
      in: path
      required: true
      schema:
        type: integer
    rowCount:
      name: rowCount
      description: The number of rows to include in the resulting range
      in: path
      required: true
      schema:
        type: integer
    row:
      name: row
      description: Row number of the cell to be retrieved. Zero-indexed.
      in: path
      required: true
      schema:
        type: integer
    column:
      name: column
      description: Column number of the cell to be retrieved. Zero-indexed.
      in: path
      required: true
      schema:
        type: integer
    count:
      name: $count
      description: Retrieves the total count of matching resources
      in: query
      schema:
        type: string
    expand:
      name: $expand
      description: Retrieves related resources
      in: query
      schema:
        type: string
    filter:
      name: $filter
      description: Filters results
      in: query
      schema:
        type: string
    format:
      name: $format
      description: Returns the results in the specified media format
      in: query
      schema:
        type: string
    orderBy:
      name: $orderby
      in: query
      schema:
        type: string
      description: Orders results
    search:
      name: $search
      description: Returns results based on search criteria
      in: query
      schema:
        type: string
    select:
      name: $select
      description: Filters properties(columns)
      in: query
      schema:
        type: string
    skip:
      name: $skip
      description: Indexes into a result set
      in: query
      schema:
        type: integer
    top:
      name: $top
      description: Sets the page size of results
      in: query
      schema:
        type: integer
    valuesOnly:
      name: valuesOnly
      description: A value indicating whether to return only the values in the used range
      in: path
      required: true
      schema:
        type: boolean
        default: false
    commentId:
      name: commentId
      description: The ID of the comment to get
      in: path
      required: true
      schema:
        type: string
    deltaRows:
      name: deltaRows
      description: The number of rows to expand or contract the bottom-right corner of the range by. If deltaRows is positive, the range will be expanded. If deltaRows is negative, the range will be contracted.
      in: path
      required: true
      schema:
        type: integer
    deltaColumns:
      name: deltaColumns
      description: The number of columns to expand or contract the bottom-right corner of the range by. If deltaColumns is positive, the range will be expanded. If deltaColumns is negative, the range will be contracted.
      in: path
      required: true
      schema:
        type: integer
    width:
      name: width
      description: The desired width of the resulting image.
      in: query
      required: true
      schema:
        type: integer
    height:
      name: height
      description: The desired height of the resulting image.
      in: query
      required: true
      schema:
        type: integer
    fittingMode:
      name: fittingMode
      description: The method used to scale the chart to the specified dimensions (if both height and width are set)."
      in: query
      required: true
      schema:
        type: string
        enum:
          - Fit
          - FitAndCenter
          - Fill
    name:
      name: name
      description: The name of the named item to get.
      in: path
      required: true
      schema:
        type: string
    pivotTableId:
      name: pivotTableId
      description: The ID of the pivot table.
      in: path
      required: true
      schema:
        type: string
paths:
  #___________________________________ SESSION ________________________________________
  /me/drive/items/{itemId}/workbook/createSession:
    post:
      summary: Creates a new session for a workbook.
      operationId: createSession
      description: Create a workbook session to start a persistent or non-persistent session
      tags:
        - session
      parameters:
        - $ref: '#/components/parameters/itemId'
      requestBody:
        content:
          application/json:
            schema:
              description: Represents session info of workbook.
              $ref: "#/components/schemas/Session"

      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
  /me/drive/items/{itemId}/workbook/refreshSession:
    post:
      summary: Refresh the existing workbook session..
      operationId: refreshSession
      description: Refresh an existing workbook session.
      tags:
        - session
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/workbookSessionId'
      responses:
        '204':
          description: No Content
  /me/drive/items/{itemId}/workbook/closeSession:
    post:
      summary: Close the existing workbook session.
      operationId: closeSession
      tags:
        - session
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/workbookSessionId'
      responses:
        '204':
          description: No Content
  /me/drive/root:/{itemPath}:/workbook/createSession:
    post:
      summary: Creates a new session for a workbook.
      operationId: createSessionWithItemPath
      description: Create a workbook session to start a persistent or non-persistent session
      tags:
        - session
      parameters:
        - $ref: '#/components/parameters/itemPath'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Session"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
  /me/drive/root:/{itemPath}:/workbook/refreshSession:
    post:
      summary: Refresh the existing workbook session..
      description: Refresh an existing workbook session.
      operationId: refreshSessionWithItemPath
      tags:
        - session
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/workbookSessionId'
      responses:
        '204':
          description: No Content
  /me/drive/root:/{itemPath}:/workbook/closeSession:
    post:
      summary: Close an existing workbook session.
      description: Close an existing workbook session.
      operationId: closeSessionWithItemPath
      tags:
        - session
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/workbookSessionId'
      responses:
        '204':
          description: No Content
  #___________________________________ WORKBOOK ________________________________________
  /me/drive/items/{itemId}/workbook/application/calculate:
    post:
      summary: Recalculate all currently opened workbooks in Excel.
      operationId: calculateApplication
      tags:
        - workbook
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculationMode'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/application:
    get:
      summary: Get the properties and relationships of the application.
      operationId: getApplication
      tags:
        - workbook
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
  /me/drive/root:/{itemPath}:/workbook/application/calculate:
    post:
      summary: Recalculate all currently opened workbooks in Excel.
      operationId: calculateApplicationWithItemPath
      tags:
        - workbook
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculationMode'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/application:
    get:
      summary: Get the properties and relationships of the application.
      operationId: getApplicationWithItemPath
      tags:
        - workbook
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
  #___________________________________ WORKBOOK COMMENTS ________________________________________
  /me/drive/items/{itemId}/workbook/comments:
    get:
      summary: Retrieve a list of comment.
      operationId: listComments
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
  /me/drive/items/{itemId}/workbook/comments/{commentId}:
    get:
      summary: Retrieve the properties and relationships of the comment.
      operationId: getComment
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/commentId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
  /me/drive/items/{itemId}/workbook/comments/{commentId}/replies:
    post:
      summary: Create a new reply of the comment.
      operationId: createCommentReply
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/commentId'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reply'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
    get:
      summary: List the replies of the comment.
      operationId: listCommentReplies
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/commentId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replies'
  /me/drive/items/{itemId}/workbook/comments/{commentId}/replies/{replyId}:
    get:
      summary: Retrieve the properties and relationships of the reply.
      operationId: getCommentReply
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/commentId'
        - $ref: '#/components/parameters/replyId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
  /me/drive/root:/{itemPath}:/workbook/comments:
    get:
      summary: Retrieve a list of comment.
      operationId: listCommentsWithItemPath
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
  /me/drive/root:/{itemPath}:/workbook/comments/{commentId}:
    get:
      summary: Retrieve the properties and relationships of the comment.
      operationId: getCommentWithItemPath
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/commentId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
  /me/drive/root:/{itemPath}:/workbook/comments/{commentId}/replies:
    post:
      summary: Create a new reply of the comment.
      operationId: createCommentReplyWithItemPath
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/commentId'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reply'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
    get:
      summary: List the replies of the comment.
      operationId: listCommentRepliesWithItemPath
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/commentId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replies'
  /me/drive/root:/{itemPath}:/workbook/comments/{commentId}/replies/{replyId}:
    get:
      summary: Retrieve the properties and relationships of the reply.
      operationId: getCommentReplyWithItemPath
      tags:
        - comment
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/commentId'
        - $ref: '#/components/parameters/replyId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
  #___________________________________ WORKSHEET ________________________________________
  /me/drive/items/{itemId}/workbook/worksheets:
    post:
      summary: Adds a new worksheet to the workbook.
      operationId: AddWorksheet
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              default: {}
              $ref: "#/components/schemas/CreateWorksheet"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksheet'
    get:
      summary: Retrieve a list of worksheet.
      operationId: listWorksheets
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksheets'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}:
    get:
      summary: Retrieve the properties and relationships of worksheet.
      operationId: getWorksheet
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksheet'
    patch:
      summary: Update the properties of worksheet.
      operationId: updateWorksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Worksheet'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksheet'
    delete:
      summary: Delete Worksheet
      operationId: deleteWorksheet
      description: Delete a worksheet from a workbook.
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/usedRange:
    get:
      summary: Get the used range of a worksheet.
      operationId: getUsedRange
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/cell(row={row},column={column}):
    get:
      summary: Gets the range containing the single cell based on row and column numbers.
      operationId: getRangeWithRowAndColumn
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/pivotTables:
    get:
      summary: Retrieve a list of workbook pivottable.
      operationId: listPivotTable
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PivotTables'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/pivotTables/{pivotTableId}:
    get:
      summary: Retrieve the properties and relationships of pivot table.
      operationId: getPivotTable
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/pivotTableId'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PivotTable'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/pivotTables/{pivotTableId}/refresh:
    post:
      summary: Refreshes the pivot table.
      operationId: refreshPivotTable
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/pivotTableId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/pivotTables/{pivotTableId}/refreshAll:
    post:
      summary: Refreshes the pivot table within a given worksheet.
      operationId: refreshAllPivotTable
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/pivotTableId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
  /me/drive/root:/{itemPath}:/workbook/worksheets:
    post:
      summary: Adds a new worksheet to the workbook.
      operationId: AddWorksheetWithIemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              default: {}
              $ref: "#/components/schemas/CreateWorksheet"
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksheet'
    get:
      summary: Retrieve a list of worksheet.
      operationId: listWorksheetsWithIemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksheets'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}:
    get:
      summary: Retrieve the properties and relationships of worksheet.
      operationId: getWorksheetWithIemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksheet'
    patch:
      summary: Update the properties of worksheet.
      operationId: updateWorksheetWithIemPath
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Worksheet'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksheet'
    delete:
      summary: Delete Worksheet
      operationId: deleteWorksheetWithIemPath
      description: Delete a worksheet from a workbook.
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/usedRange:
    get:
      summary: Get the used range of a worksheet.
      operationId: getUsedRangeWithIemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/cell(row={row},column={column}):
    get:
      summary: Gets the range containing the single cell based on row and column numbers.
      operationId: getRangeWithRowAndColumnWithItemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/pivotTables:
    get:
      summary: Retrieve a list of workbook pivottable.
      operationId: listPivotTableWithItemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PivotTables'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/pivotTables/{pivotTableId}:
    get:
      summary: Retrieve a list of workbook pivottable.
      operationId: getPivotTableWithItemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/pivotTableId'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PivotTable'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/pivotTables/{pivotTableId}/refresh:
    post:
      summary: Refreshes the pivot table.
      operationId: refreshPivotTableWithItemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/pivotTableId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/pivotTables/{pivotTableId}/refreshAll:
    post:
      summary: Refreshes the pivot table within a given worksheet.
      operationId: refreshAllPivotTableWithItemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/pivotTableId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
  #___________________________________ RANGE ________________________________________
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range:
    get:
      summary: Gets the range.
      operationId: getWorksheetRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
        '404':
          description: Range of cells not found.
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range:
    patch:
      summary: Update the properties of range.
      operationId: updateRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Range'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}'):
    get:
      summary: Retrieve the properties and relationships of range.
      operationId: getRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
    patch:
      summary: Update the properties of range.
      operationId: updateRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Range'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range:
    get:
      summary: Retrieve the properties and relationships of range.
      operationId: getColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
    patch:
      summary: Update the properties of range.
      operationId: updateColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Range'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/insert:
    post:
      summary: Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space.
      operationId: insertRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/insert:
    post:
      summary: Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space.
      operationId: insertRangeWithAddrees
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/insert:
    post:
      summary: Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space.
      operationId: insertColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/format:
    get:
      summary: Retrieve the properties and relationships of the range format
      operationId: getRangeFormat
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
    patch:
      summary: Update the properties of range format.
      operationId: updateRangeFormat
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangeFormat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/format:
    get:
      summary: Retrieve the properties and relationships of the range format
      operationId: getRangeFormatWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
    patch:
      summary: Update the properties of range format.
      operationId: updateRangeFormatWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangeFormat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/format:
    get:
      summary: Retrieve the properties and relationships of the range format
      operationId: getColumnRangeFormat
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
    patch:
      summary: Update the properties of range format.
      operationId: updateColumnRangeFormat
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangeFormat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/merge:
    post:
      summary: Merge the range cells into one region in the worksheet.
      operationId: mergeRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Across'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/merge:
    post:
      summary: Merge the range cells into one region in the worksheet.
      operationId: mergeRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Across'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/merge:
    post:
      summary: Merge the range cells into one region in the worksheet.
      operationId: mergeColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Across'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/unmerge:
    post:
      summary: Unmerge the range cells into separate cells.
      operationId: unmergeRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/unmerge:
    post:
      summary: Unmerge the range cells into separate cells.
      operationId: unmergeRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/unmerge:
    post:
      summary: Unmerge the range cells into separate cells.
      operationId: unmergeColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/clear:
    post:
      summary: Clear range values such as format, fill, and border.
      operationId: clearRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyTo'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/clear:
    post:
      summary: Clear range values such as format, fill, and border.
      operationId: clearRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyTo'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/clear:
    post:
      summary: Clear range values such as format, fill, and border.
      operationId: clearColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyTo'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/delete:
    post:
      summary: Deletes the cells associated with the range.
      operationId: DeleteCell
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/delete:
    post:
      summary: Deletes the cells associated with the range.
      operationId: DeleteCellWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/delete:
    post:
      summary: Deletes the cells associated with the range.
      operationId: DeleteColumnCell
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
#  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/boundingRect:
#    get:
#      summary: Gets the smallest range that encompasses the given ranges.
#      operationId: getBoundingRect
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/namedItemName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/boundingRect:
#    get:
#      summary: Gets the smallest range that encompasses the given ranges.
#      operationId: getBoundingRectWithAddress
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/worksheetIdOrName'
#        - $ref: '#/components/parameters/address'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/boundingRect:
#    get:
#      summary: Gets the smallest range that encompasses the given ranges.
#      operationId: getColumnBoundingRect
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/tableIdOrName'
#        - $ref: '#/components/parameters/columnIdOrName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/cell(row={row},column={column}):
    get:
      summary: Gets the range containing the single cell based on row and column numbers.
      operationId: getNameRangeWithRowAndColumn
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/cell(row={row},column={column}):
    get:
      summary: Gets the range object containing the single cell based on row and column numbers.
      operationId: getWorkSheetRangeWithRowAndColumn
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/cell(row={row},column={column}):
    get:
      summary: Gets the range object containing the single cell based on row and column numbers.
      operationId: getRangeWithRowColumnAddress
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/cell(row={row},column={column}):
    get:
      summary: Gets the range object containing the single cell based on row and column numbers.
      operationId: getColumnRangeWithRowAndColumn
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/column(column={column}):
    get:
      summary: Gets a column contained in the range.
      operationId: getRangeColumn
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
        '404':
          description: Cell not found.
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/column(column={column}):
    get:
      summary: Gets a column contained in the range
      operationId: getRangeColumnWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/column(column={column}):
    get:
      summary: Gets a column contained in the range
      operationId: getColumnRangeColumn
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/columnsAfter:
    get:
      summary: Gets a certain number of columns to the right of the given range.
      operationId: getCloumAfterRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/columnsAfter(count={columnCount}):
    get:
      summary: Gets a certain number of columns to the right of the given range.
      operationId: getCloumAfterRangeWithCount
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/columnCount'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/columnsBefore:
    get:
      summary: Gets a certain number of columns to the left of the given range.
      operationId: getCloumBeforeRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/columnsBefore(count={columnCount}):
    get:
      summary: Gets a certain number of columns to the left of the given range.
      operationId: getCloumBeforeRangeWithCount
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/columnCount'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/entireColumn:
    get:
      summary: Gets the range that represents the entire column of the range.
      operationId: getEntireColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/entireColumn:
    get:
      summary: Gets the range that represents the entire column of the range
      operationId: getEntireColumnRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/entireColumn:
    get:
      summary: Gets the range that represents the entire column of the range
      operationId: getColumnEntireColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/entireRow:
    get:
      summary: Gets the range that represents the entire row of the range
      operationId: getEntireRowRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/entireRow:
    get:
      summary: Gets the range that represents the entire row of the range
      operationId: getEntireRowRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/entireRow:
    get:
      summary: Gets the range that represents the entire row of the range
      operationId: getColumnEntireRowRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/intersection:
#    get:
#      summary: Gets the range that represents the rectangular intersection of the given ranges.
#      operationId: getIntersectionRange
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/namedItemName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/intersection:
#    get:
#      summary: Gets the range object that represents the rectangular intersection of the given ranges.
#      operationId: getIntersectionRangeWithAddress
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/worksheetIdOrName'
#        - $ref: '#/components/parameters/address'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/intersection:
#    get:
#      summary: Gets the range object that represents the rectangular intersection of the given ranges
#      operationId: getColumnIntersectionRange
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/tableIdOrName'
#        - $ref: '#/components/parameters/columnIdOrName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/lastCell:
    get:
      summary: Gets the last cell within the range.
      operationId: getLastCell
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/lastCell:
    get:
      summary: Gets the last cell within the range.
      operationId: getLastCellWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/lastCell:
    get:
      summary: Gets the last cell within the range.
      operationId: getColumnLastCell
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/lastColumn:
    get:
      summary: Gets the last column within the range
      operationId: getLastColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/lastColumn:
    get:
      summary: Gets the last column within the range
      operationId: getLastColumnRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/lastColumn:
    get:
      summary: Gets the last column within the range
      operationId: getColumnLastColumnRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/lastRow:
    get:
      summary: Gets the last row within the range.
      operationId: getLastRowRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/lastRow:
    get:
      summary: Gets the last row within the range.
      operationId: getLastRowRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/lastRow:
    get:
      summary: Gets the last row within the range.
      operationId: getColumnLastRowRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/offsetRange:
#    get:
#      summary: Gets an object that represents a range that's offset from the specified range.
#      operationId: getOffsetRange
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/namedItemName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/OffsetRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/offsetRange:
#    get:
#      summary: Gets an object that represents a range that's offset from the specified range.
#      operationId: getOffsetRangeWithAddress
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/worksheetIdOrName'
#        - $ref: '#/components/parameters/address'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/OffsetRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/offsetRange:
#    get:
#      summary: Gets an object that represents a range that's offset from the specified range.
#      operationId: getColumnOffsetRange
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/tableIdOrName'
#        - $ref: '#/components/parameters/columnIdOrName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/OffsetRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/row:
#    get:
#      summary: Gets a row contained in the range.
#      operationId: getRowRange
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/namedItemName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Row'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/row:
#    get:
#      summary: Gets a row contained in the range.
#      operationId: getRowRangeWithAddress
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/worksheetIdOrName'
#        - $ref: '#/components/parameters/address'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Row'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/row:
#    get:
#      summary: Gets a row contained in the range.
#      operationId: getColumnRowRange
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemId'
#        - $ref: '#/components/parameters/tableIdOrName'
#        - $ref: '#/components/parameters/columnIdOrName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Row'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/rowsAbove:
    get:
      summary: Gets a certain number of rows above a given range.
      operationId: getRowsAboveRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/rowsAbove(count={rowCount}):
    get:
      summary: Gets a certain number of rows above a given range.
      operationId: getRowsAboveRangeWithCount
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/rowCount'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/rowsBelow:
    get:
      summary: Gets a certain number of columns to the left of the given range
      operationId: getRowsBelowRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/rowsBelow(count={rowCount}):
    get:
      summary: Gets a certain number of columns to the left of the given range
      operationId: getRowsBelowRangeWithCount
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/rowCount'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/names/{namedItemName}/range/usedRange(valuesOnly={valuesOnly}):
    get:
      summary: Get the used range of the given range.
      operationId: getUsedRangeWithValuesOnly
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/valuesOnly'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/usedRange(valuesOnly={valuesOnly}):
    get:
      summary: Get the used range of the given range.
      operationId: getUsedRangeWithAddress
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/valuesOnly'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/usedRange(valuesOnly={valuesOnly}):
    get:
      summary: Get the used range of the given range.
      operationId: getColumnUsedRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/valuesOnly'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range/resizedRange(deltaRows={deltaRows}, deltaColumns={deltaColumns}):
    post:
      summary: Get the resized range of a range.
      operationId: getResizedRange
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/deltaRows'
        - $ref: '#/components/parameters/deltaColumns'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/visibleView:
    get:
      summary: Get the range visible from a filtered range
      operationId: getVisibleView
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeView'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range:
    get:
      summary: Gets the range.
      operationId: getWorksheetRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
        '404':
          description: Range of cells not found.
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range:
    patch:
      summary: Update the properties of range.
      operationId: updateWorkbookRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Range'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}'):
    get:
      summary: Retrieve the properties and relationships of range.
      operationId: getRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
    patch:
      summary: Update the properties of range.
      operationId: updateRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Range'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range:
    get:
      summary: Retrieve the properties and relationships of range.
      operationId: getColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
    patch:
      summary: Update the properties of range.
      operationId: updateColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Range'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/insert:
    post:
      summary: Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space.
      operationId: insertRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/insert:
    post:
      summary: Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space.
      operationId: insertRangeWithAddreesItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/insert:
    post:
      summary: Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space.
      operationId: insertColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/format:
    get:
      summary: Retrieve the properties and relationships of the range format
      operationId: getRangeFormatWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
    patch:
      summary: Update the properties of range format.
      operationId: updateRangeFormatWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangeFormat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/format:
    get:
      summary: Retrieve the properties and relationships of the range format
      operationId: getRangeFormatWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
    patch:
      summary: Update the properties of range format.
      operationId: updateRangeFormatWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangeFormat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/format:
    get:
      summary: Retrieve the properties and relationships of the range format
      operationId: getColumnRangeFormatWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
    patch:
      summary: Update the properties of range format.
      operationId: updateColumnRangeFormatWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangeFormat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeFormat'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/merge:
    post:
      summary: Merge the range cells into one region in the worksheet.
      operationId: mergeRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Across'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/merge:
    post:
      summary: Merge the range cells into one region in the worksheet.
      operationId: mergeRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Across'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/merge:
    post:
      summary: Merge the range cells into one region in the worksheet.
      operationId: mergeColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Across'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/unmerge:
    post:
      summary: Unmerge the range cells into separate cells.
      operationId: unmergeRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/unmerge:
    post:
      summary: Unmerge the range cells into separate cells.
      operationId: unmergeRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/unmerge:
    post:
      summary: Unmerge the range cells into separate cells.
      operationId: unmergeColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/clear:
    post:
      summary: Clear range values such as format, fill, and border.
      operationId: clearRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyTo'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/clear:
    post:
      summary: Clear range values such as format, fill, and border.
      operationId: clearRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyTo'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/clear:
    post:
      summary: Clear range values such as format, fill, and border.
      operationId: clearColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyTo'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/delete:
    post:
      summary: Deletes the cells associated with the range.
      operationId: DeleteCellWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/delete:
    post:
      summary: Deletes the cells associated with the range.
      operationId: DeleteCellWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/delete:
    post:
      summary: Deletes the cells associated with the range.
      operationId: DeleteColumnCellWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
      responses:
        '200':
          description: OK
#  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/boundingRect:
#    get:
#      summary: Gets the smallest range that encompasses the given ranges.
#      operationId: getBoundingRectWithItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/namedItemName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/boundingRect:
#    get:
#      summary: Gets the smallest range that encompasses the given ranges.
#      operationId: getBoundingRectWithAddressItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/worksheetIdOrName'
#        - $ref: '#/components/parameters/address'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/boundingRect:
#    get:
#      summary: Gets the smallest range that encompasses the given ranges.
#      operationId: getColumnBoundingRectWithItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/tableIdOrName'
#        - $ref: '#/components/parameters/columnIdOrName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/cell(row={row},column={column}):
    get:
      summary: Gets the range containing the single cell based on row and column numbers.
      operationId: getNamedItemRangeWithRowColumnItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/cell(row={row},column={column}):
    get:
      summary: Gets the range object containing the single cell based on row and column numbers.
      operationId: getWorkSheetRangeWithRowAndColumnItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/cell(row={row},column={column}):
    get:
      summary: Gets the range object containing the single cell based on row and column numbers.
      operationId: getRangeWithRowColumnAddressItemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/cell(row={row},column={column}):
    get:
      summary: Gets the range object containing the single cell based on row and column numbers.
      operationId: getRangeWithRowAndColumnItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/row'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/column(column={column}):
    get:
      summary: Gets a column contained in the range.
      operationId: getRangeColumnWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
        '404':
          description: Cell not found.
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/column(column={column}):
    get:
      summary: Gets a column contained in the range
      operationId: getRangeColumnWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/column(column={column}):
    get:
      summary: Gets a column contained in the range
      operationId: getColumnRangeColumnWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/column'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/columnsAfter:
    get:
      summary: Gets a certain number of columns to the right of the given range.
      operationId: getCloumAfterRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/columnsAfter(count={columnCount}):
    get:
      summary: Gets a certain number of columns to the right of the given range.
      operationId: getCloumAfterRangeWithCountItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/columnCount'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/columnsBefore:
    get:
      summary: Gets a certain number of columns to the left of the given range.
      operationId: getCloumBeforeRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/columnsBefore(count={columnCount}):
    get:
      summary: Gets a certain number of columns to the left of the given range.
      operationId: getCloumBeforeRangeWithCountItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/columnCount'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/entireColumn:
    get:
      summary: Gets the range that represents the entire column of the range.
      operationId: getEntireColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/entireColumn:
    get:
      summary: Gets the range that represents the entire column of the range
      operationId: getEntireColumnRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/entireColumn:
    get:
      summary: Gets the range that represents the entire column of the range
      operationId: getColumnEntireColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/entireRow:
    get:
      summary: Gets the range that represents the entire row of the range
      operationId: getEntireRowRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/entireRow:
    get:
      summary: Gets the range that represents the entire row of the range
      operationId: getEntireRowRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/entireRow:
    get:
      summary: Gets the range that represents the entire row of the range
      operationId: getColumnEntireRowRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/intersection:
#    get:
#      summary: Gets the range that represents the rectangular intersection of the given ranges.
#      operationId: getIntersectionRangeWithItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/namedItemName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/intersection:
#    get:
#      summary: Gets the range object that represents the rectangular intersection of the given ranges.
#      operationId: getIntersectionRangeWithAddressItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/worksheetIdOrName'
#        - $ref: '#/components/parameters/address'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/intersection:
#    get:
#      summary: Gets the range object that represents the rectangular intersection of the given ranges
#      operationId: getColumnIntersectionRangeWithItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/tableIdOrName'
#        - $ref: '#/components/parameters/columnIdOrName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AnotherRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/lastCell:
    get:
      summary: Gets the last cell within the range.
      operationId: getLastCellWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/lastCell:
    get:
      summary: Gets the last cell within the range.
      operationId: getLastCellWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/lastCell:
    get:
      summary: Gets the last cell within the range.
      operationId: getColumnLastCellWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/lastColumn:
    get:
      summary: Gets the last column within the range
      operationId: getLastColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/lastColumn:
    get:
      summary: Gets the last column within the range
      operationId: getLastColumnRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/lastColumn:
    get:
      summary: Gets the last column within the range
      operationId: getColumnLastColumnRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/lastRow:
    get:
      summary: Gets the last row within the range.
      operationId: getLastRowRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/lastRow:
    get:
      summary: Gets the last row within the range.
      operationId: getLastRowRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/lastRow:
    get:
      summary: Gets the last row within the range.
      operationId: getColumnLastRowRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/offsetRange:
#    get:
#      summary: Gets an object that represents a range that's offset from the specified range.
#      operationId: getOffsetRangeWithItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/namedItemName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/OffsetRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/offsetRange:
#    get:
#      summary: Gets an object that represents a range that's offset from the specified range.
#      operationId: getOffsetRangeWithAddressItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/worksheetIdOrName'
#        - $ref: '#/components/parameters/address'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/OffsetRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/offsetRange:
#    get:
#      summary: Gets an object that represents a range that's offset from the specified range.
#      operationId: getColumnOffsetRangeWithItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/tableIdOrName'
#        - $ref: '#/components/parameters/columnIdOrName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/OffsetRange'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/row:
#    get:
#      summary: Gets a row contained in the range.
#      operationId: getRowRangeWithItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/namedItemName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Row'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/row:
#    get:
#      summary: Gets a row contained in the range.
#      operationId: getRowRangeWithAddressItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/worksheetIdOrName'
#        - $ref: '#/components/parameters/address'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Row'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
#  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/row:
#    get:
#      summary: Gets a row contained in the range.
#      operationId: getColumnRowRangeWithItemPath
#      tags:
#        - range
#      parameters:
#        - $ref: '#/components/parameters/itemPath'
#        - $ref: '#/components/parameters/tableIdOrName'
#        - $ref: '#/components/parameters/columnIdOrName'
#        - $ref: '#/components/parameters/sessionId'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Row'
#      responses:
#        '200':
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/rowsAbove:
    get:
      summary: Gets a certain number of rows above a given range.
      operationId: getRowsAboveRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/rowsAbove(count={rowCount}):
    get:
      summary: Gets a certain number of rows above a given range.
      operationId: getRowsAboveRangeWithCountItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/rowCount'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/rowsBelow:
    get:
      summary: Gets a certain number of columns to the left of the given range
      operationId: getRowsBelowRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/rowsBelow(count={rowCount}):
    get:
      summary: Gets a certain number of columns to the left of the given range
      operationId: getRowsBelowRangeWithCountItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/rowCount'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names/{namedItemName}/range/usedRange(valuesOnly={valuesOnly}):
    get:
      summary: Get the used range of the given range.
      operationId: getUsedRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/namedItemName'
        - $ref: '#/components/parameters/valuesOnly'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/usedRange(valuesOnly={valuesOnly}):
    get:
      summary: Get the used range of the given range.
      operationId: getUsedRangeWithAddressItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/valuesOnly'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}/range/usedRange(valuesOnly={valuesOnly}):
    get:
      summary: Get the used range of the given range.
      operationId: getColumnUsedRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/valuesOnly'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range/resizedRange(deltaRows={deltaRows}, deltaColumns={deltaColumns}):
    post:
      summary: Get the resized range of a range.
      operationId: getResizedRangeWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/deltaRows'
        - $ref: '#/components/parameters/deltaColumns'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/range(address='{address}')/visibleView:
    get:
      summary: Get the range visible from a filtered range
      operationId: getVisibleViewWithItemPath
      tags:
        - range
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RangeView'
  #___________________________________ TABLES ________________________________________
  /me/drive/items/{itemId}/workbook/tables:
    get:
      summary: Retrieve a list of table in the workbook.
      operationId: ListWorkbookTables
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tables'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables:
    get:
      summary: Retrieve a list of table in the worksheet.
      operationId: listTables
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tables'
  /me/drive/items/{itemId}/workbook/tables/add:
    post:
      summary: Create a new table in the workbook
      operationId: createWorkbookTable
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTablePayload'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables/add:
    post:
      summary: Create a new table in the worksheet.
      operationId: createTable
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTablePayload'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}:
    patch:
      summary: Update the properties of table in the workbook.
      description: Update the properties of table
      operationId: updateWorkbookTable
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
    delete:
      summary: Deletes the table from the workbook.
      operationId: deleteWorkbookTable
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
    get:
      summary: Retrieve the properties and relationships of table.
      operationId: getWorkbookTable
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}:
    patch:
      summary: Update the properties of table in the worksheet
      operationId: updateTable
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
    delete:
      summary: Deletes the table from the worksheet
      operationId: deleteTable
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/range:
    get:
      summary: Get the range associated with the entire table.
      operationId: getWorkbookTableRange
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/range:
    get:
      summary: Get the range associated with the entire table.
      operationId: getTableRange
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/tables:
    get:
      summary: Retrieve a list of table in the workbook.
      operationId: ListWorkbookTablesWithItemPath
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tables'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables:
    get:
      summary: Retrieve a list of table in the worksheet.
      operationId: listTablesWithItemPath
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tables'
  /me/drive/root:/{itemPath}:/workbook/tables/add:
    post:
      summary: Create a new table in the workbook
      operationId: createWorkbookTableWithItemPath
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTablePayload'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables/add:
    post:
      summary: Create a new table in the worksheet.
      operationId: createTableWithItemPath
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTablePayload'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}:
    patch:
      summary: Update the properties of table in the workbook.
      description: Update the properties of table
      operationId: updateWorkbookTableWithItemPath
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
    delete:
      summary: Deletes the table from the workbook.
      operationId: deleteWorkbookTableWithItemPath
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
    get:
       summary: Retrieve the properties and relationships of table.
       operationId: getWorkbookTableWithItemPath
       parameters:
         - $ref: '#/components/parameters/itemPath'
         - $ref: '#/components/parameters/tableIdOrName'
         - $ref: '#/components/parameters/sessionId'
         - $ref: '#/components/parameters/count'
         - $ref: '#/components/parameters/expand'
         - $ref: '#/components/parameters/filter'
         - $ref: '#/components/parameters/format'
         - $ref: '#/components/parameters/orderBy'
         - $ref: '#/components/parameters/search'
         - $ref: '#/components/parameters/select'
         - $ref: '#/components/parameters/skip'
         - $ref: '#/components/parameters/top'
       responses:
         '200':
           description: OK.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Table'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}:
    patch:
      summary: Update the properties of table in the worksheet
      operationId: updateTableWithItemPath
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
    delete:
      summary: Deletes the table from the worksheet
      operationId: deleteTableWithItemPath
      tags:
        - tables
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
    get:
       summary: Retrieve the properties and relationships of table.
       operationId: getTableWithItemPath
       parameters:
         - $ref: '#/components/parameters/itemPath'
         - $ref: '#/components/parameters/worksheetIdOrName'
         - $ref: '#/components/parameters/tableIdOrName'
         - $ref: '#/components/parameters/sessionId'
         - $ref: '#/components/parameters/count'
         - $ref: '#/components/parameters/expand'
         - $ref: '#/components/parameters/filter'
         - $ref: '#/components/parameters/format'
         - $ref: '#/components/parameters/orderBy'
         - $ref: '#/components/parameters/search'
         - $ref: '#/components/parameters/select'
         - $ref: '#/components/parameters/skip'
         - $ref: '#/components/parameters/top'
       responses:
         '200':
           description: OK.
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Table'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/range:
    get:
      summary: Get the range associated with the entire table.
      operationId: getWorkbookTableRangeWithItemPath
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/range:
    get:
      summary: Get the range associated with the entire table.
      operationId: getTableRangeWithItemPath
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  #___________________________________ TABLE ROWS ________________________________________
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/rows:
    get:
      summary: Retrieve a list of table row in the workbook.
      operationId: listWorkbookTableRows
      tags:
        - row
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rows'
    post:
      summary: Adds rows to the end of a table in the workbook.
      operationId: createWorkbookTableRow
      tags:
        - table
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/rows:
    get:
      summary: Retrieve a list of table row in the worksheet.
      operationId: listTableRows
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rows'
    post:
      summary: Adds rows to the end of a table in the worksheet.
      operationId: createTableRow
      tags:
        - table
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
    patch:
      summary: Update the properties of table row.
      operationId: updateTableRow
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/rowIndex'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/rows/add:
    post:
      summary: Adds rows to the end of the table.
      operationId: addTableRow
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
  /me/drive/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/rows/itemAt(index={index}):
    get:
      summary: Gets a row based on its position in the collection.
      operationId: getTableRowWithIndex
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
    delete:
      summary: Deletes the row from the workbook table.
      operationId: deleteTableRow
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/rows/itemAt(index={index})/range:
    get:
      summary: Get the range associated with the entire row.
      operationId: getWorkbookTableRowRangeWithIndex
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/rows/itemAt(index={index})/range:
    get:
      summary: Get the range associated with the entire row.
      operationId: getTableRowRangeWithIndex
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'

  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/rows:
    get:
      summary: Retrieve a list of table row in the workbook.
      operationId: listWorkbookTableRowsWithItemPath
      tags:
        - row
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rows'
    post:
      summary: Adds rows to the end of a table in the workbook.
      operationId: createWorkbookTableRowWithItemPath
      tags:
        - table
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/rows:
    get:
      summary: Retrieve a list of table row in the worksheet.
      operationId: listTableRowsWithItemPath
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rows'
    post:
      summary: Adds rows to the end of a table in the worksheet.
      operationId: createTableRowWithItemPath
      tags:
        - table
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
    patch:
      summary: Update the properties of table row.
      operationId: updateTableRowWithItemPath
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/rowIndex'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/rows/add:
    post:
      summary: Adds rows to the end of the table.
      operationId: addTableRowWithItemPath
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/rows/itemAt(index={index}):
    get:
      summary: Gets a row based on its position in the collection.
      operationId: getTableRowWithIndexItemPath
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
    delete:
      summary: Deletes the row from the workbook table.
      operationId: deleteTableRowWithItemPath
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/rows/itemAt(index={index})/range:
    get:
      summary: Get the range associated with the entire row.
      operationId: getWorkbookTableRowRangeWithIndexItemPath
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/rows/itemAt(index={index})/range:
    get:
      summary: Get the range associated with the entire row.
      operationId: getTableRowRangeWithIndexItemPath
      tags:
        - tablerow
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  #___________________________________ TABLE COLUMNS ________________________________________
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns:
    post:
      summary: Create a new table column in the workbook.
      operationId: createWorkBookTableColumn
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
    get:
      summary: Retrieve a list of table column in the workbook.
      operationId: listWorkbookTableColumns
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Columns'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/columns:
    post:
      summary: Create a new table column in the workbook.
      operationId: createTableColumn
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
    get:
      summary: Retrieve a list of table column in the workbook.
      operationId: listTableColumns
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Columns'
  /me/drive/items/{itemId}/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}:
    delete:
      summary: Deletes the column from the table.
      operationId: deleteWorkbookTableColumn
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content.
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/columns/{columnIdOrName}:
    delete:
      summary: Delete a column from a table.
      operationId: deleteTableColumn
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content.

  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns:
    post:
      summary: Create a new table column in the workbook.
      operationId: createWorkBookTableColumnWithItemPath
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
    get:
      summary: Retrieve a list of table column in the workbook.
      operationId: listWorkbookTableColumnsWithItemPath
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Columns'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/columns:
    post:
      summary: Create a new table column in the workbook.
      operationId: createTableColumnWithItemPath
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
    get:
      summary: Retrieve a list of table column in the workbook.
      operationId: listTableColumnsWithItemPath
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Columns'
  /me/drive/root:/{itemPath}:/workbook/tables/{tableIdOrName}/columns/{columnIdOrName}:
    delete:
      summary: Deletes the column from the table.
      operationId: deleteWorkbookTableColumnWithItemPath
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content.
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/tables/{tableIdOrName}/columns/{columnIdOrName}:
    delete:
      summary: Delete a column from a table.
      operationId: deleteTableColumnWithItemPath
      tags:
        - tableColumn
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/tableIdOrName'
        - $ref: '#/components/parameters/columnIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '204':
          description: No Content.
  #___________________________________ CHART ________________________________________
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts:
    get:
      summary: Retrieve a list of chart.
      operationId: listCharts
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        "200":
          description: A collection of chart objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charts'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/add:
    post:
      summary: Creates a new chart
      operationId: addChart
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChartPayload'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chart'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}:
    get:
      summary: Retrieve the properties and relationships of chart.
      operationId: getChart
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chart'
    patch:
      summary: Update the properties of chart.
      operationId: updateChart
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chart'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chart'
    delete:
      summary: Deletes the chart.
      operationId: deleteChart
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/setData:
    post:
      summary: Resets the source data for the chart.
      operationId: setChartData
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetData'
      responses:
        '200':
          description: OK.
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/setPosition:
    post:
      summary: Positions the chart relative to cells on the worksheet
      operationId: setPosition
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
      responses:
        '200':
          description: OK
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/series:
    post:
      summary: create a new chart series.
      operationId: createChartSeries
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartSeries'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartSeries'
    get:
      summary: Retrieve a list of chart series .
      operationId: listChartSeries
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collectionOfChartSeries'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/itemAt(index={index}):
    get:
      summary: Gets a chart based on its position in the collection.
      operationId: getChartBasedOnPosition
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chart'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/image:
    get:
      summary: Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.
      operationId: getChartImage
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/image(width={width}):
    get:
      summary: Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.
      operationId: getChartImageWithWidth
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/image(width={width},height={height}):
    get:
      summary: Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.
      operationId: getChartImageWithWidthHeight
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/height'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/image(width={width},height={height},fittingMode={fittingMode}):
    get:
      summary: Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.
      operationId: getChartImageWithWidthHeightFittingMode
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/height'
        - $ref: '#/components/parameters/fittingMode'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts:
    get:
      summary: Retrieve a list of chart.
      operationId: listChartsWithItemPath
      tags:
        - worksheet
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        "200":
          description: A collection of chart objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charts'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/add:
    post:
      summary: Creates a new chart
      operationId: addChartWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChartPayload'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chart'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}:
    get:
      summary: Retrieve the properties and relationships of chart.
      operationId: getChartWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chart'
    patch:
      summary: Update the properties of chart.
      operationId: updateChartWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chart'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chart'
    delete:
      summary: Deletes the chart.
      operationId: deleteChartWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/setData:
    post:
      summary: Resets the source data for the chart.
      operationId: setChartDataWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetData'
      responses:
        '200':
          description: OK.
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/setPosition:
    post:
      summary: Positions the chart relative to cells on the worksheet
      operationId: setPositionWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
      responses:
        '200':
          description: OK
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/series:
    post:
      summary: create a new chart series.
      operationId: createChartSeriesWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartSeries'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartSeries'
    get:
      summary: Retrieve a list of chart series .
      operationId: listChartSeriesWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collectionOfChartSeries'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/itemAt(index={index}):
    get:
      summary: Gets a chart based on its position in the collection.
      operationId: getChartBasedOnPositionWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chart'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/image:
    get:
      summary: Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.
      operationId: getChartImageWithItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/image(width={width}):
    get:
      summary: Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.
      operationId: getChartImageWithWidthItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/image(width={width},height={height}):
    get:
      summary: Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.
      operationId: getChartImageWithWidthHeightItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/height'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/charts/{chartIdOrName}/image(width={width},height={height},fittingMode={fittingMode}):
    get:
      summary: Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.
      operationId: getChartImageWithWidthHeightFittingModeItemPath
      tags:
        - chart
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/chartIdOrName'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/height'
        - $ref: '#/components/parameters/fittingMode'
        - $ref: '#/components/parameters/sessionId'

      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  #___________________________________ NAMED ITEM ________________________________________
  /me/drive/items/{itemId}/workbook/names:
    get:
      summary: Retrieve a list of named item.
      operationId: listWorkbookNamedItem
      tags:
        - namedItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItems'
  /me/drive/items/{itemId}/workbook/names/add:
    post:
      summary: Adds a new name to the collection of the given scope using the user's locale for the formula.
      operationId: addWorkbookNamedItem
      tags:
        - namedItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNamedItemPayload'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItem'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/names/add:
    post:
      summary: Adds a new name to the collection of the given scope using the user's locale for the formula.
      operationId: addNamedItem
      tags:
        - namedItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNamedItemPayload'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItem'
  /me/drive/items/{itemId}/workbook/worksheets/{worksheetIdOrName}/names:
    get:
      summary: Retrieve the properties and relationships of the named item.
      operationId: getWorksheetNamedItems
      tags:
        - namedItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItems'
  /me/drive/items/{itemId}/workbook/names/{name}:
    get:
      summary: Retrieve the properties and relationships of the named item.
      operationId: getWorkbookNamedItem
      tags:
        - namedItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItem'
    patch:
      summary: Update the properties of the named item .
      operationId: updateWorkbookNamedItem
      tags:
        - namedItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedItem'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItem'
  /me/drive/items/{itemId}/workbook/names/{name}/range:
    get:
      summary: Retrieve the range object that is associated with the name.
      operationId: getNamedRange
      tags:
        - namedItem
      parameters:
        - $ref: '#/components/parameters/itemId'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
  /me/drive/root:/{itemPath}:/workbook/names:
    get:
      summary: Retrieve a list of named item.
      operationId: listWorkbookNamedItemWithItemPath
      tags:
        - namedItem
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItems'
  /me/drive/root:/{itemPath}:/workbook/names/add:
    post:
      summary: Adds a new name to the collection of the given scope using the user's locale for the formula.
      operationId: addWorkbookNamedItemWithItemPath
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNamedItemPayload'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItem'
  /me/drive/root:/{itemPath}:/workbook/worksheets/{worksheetIdOrName}/names/add:
    post:
      summary: Adds a new name to the collection of the given scope using the user's locale for the formula.
      operationId: addNamedItemWithItemPath
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/worksheetIdOrName'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNamedItemPayload'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItem'
  /me/drive/root:/{itemPath}:/workbook/names/{name}:
    get:
      summary: Retrieve the properties and relationships of the named item.
      operationId: getWorkbookNamedItemWithItemPath
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/expand'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/top'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItem'
    patch:
      summary: Update the properties of the named item .
      operationId: updateWorkbookNamedItemWithItemPath
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/sessionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedItem'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedItem'
  /me/drive/root:/{itemPath}:/workbook/names/{name}/range:
    get:
      summary: Retrieve the range object that is associated with the name.
      operationId: getNamedRangeWithItemPath
      parameters:
        - $ref: '#/components/parameters/itemPath'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/sessionId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
